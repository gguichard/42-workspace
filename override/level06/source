#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/ptrace.h>
#include <stdint.h>

int auth(char *buffer, unsigned int serial)
{
	size_t len;			// ebp-0xc
	unsigned int tmp;	// ebp-0x10
	size_t i;			// ebp-0x14

	buffer[strcspn(buffer, "\n")] = '\0';
	len = strnlen(buffer, 0x20);
	if (len <= 5)
		return (1);
	else if (ptrace(PT_TRACE_ME, 0, 1, 0) == -1)
	{
		puts("\033[32m.---------------------------.");
		puts("\033[31m| !! TAMPERING DETECTED !!  |");
		puts("\033[32m'---------------------------'");
		return (1);
	}
	tmp = (buffer[3] ^ 0x1337) + 0x5eeded;
	for (i = 0; i < len; i++)
	{
		if (buffer[i] <= 0x1f)
			return (1);
		tmp += (tmp ^ buffer[i]) - ((tmp ^ buffer[i]) / 1337 * 1337);
	}
	return (serial == tmp ? 0 : 1);
}

int main(int argc, char **argv)
{
	// canary at esp+0x4c
	char buffer[0x20];		// esp+0x2c
	unsigned int serial;	// esp+0x28

	puts("***********************************");
	puts("*\t\tlevel06\t\t  *");
	puts("***********************************");
	printf("-> Enter Login:");
	fgets(buffer, sizeof(buffer), stdin);
	puts("***********************************");
	puts("***** NEW ACCOUNT DETECTED ********");
	puts("***********************************");
	printf("-> Enter Serial: ");
	scanf("%u", &serial);
	if (auth(buffer, serial) == 0)
	{
		puts("Authenticated!");
		system("/bin/sh");
		return (0);
	}
	return (1);
}
